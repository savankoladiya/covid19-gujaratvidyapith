"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const GridHelper_1 = require("../../../../../lib/project-utility/GridHelper");
const jQueryTemplate_1 = require("../../../../../lib/templates/jQueryTemplate");
class FileExplorerTemplate extends jQueryTemplate_1.jQueryTemplate {
    constructor() {
        super(__dirname);
        this.userExtraConfiguration = {};
        this.id = "tree-grid-file-explorer";
        this.name = "Tree Grid File Explorer";
        this.controlGroup = "Data Grids";
        this.description = "file explorer sample using igTreeGrid";
        this.dependencies = ["igTreeGrid"];
        this.projectType = "js";
        this.listInComponentTemplates = false;
        this.listInCustomTemplates = true;
        this.extraConfigurations = [];
        this.gridHelper = new GridHelper_1.GridHelper();
        this.gridHelper.tree = true;
        const featureConfiguration = {
            choices: ["Sorting"],
            default: "",
            key: "features",
            message: "Select features for the igTreeGrid",
            type: 1 /* MultiChoice */
        };
        this.extraConfigurations.push(featureConfiguration);
    }
    setExtraConfiguration(extraConfigKeys) {
        this.userExtraConfiguration = extraConfigKeys;
    }
    generateFiles(projectPath, name, ...options) {
        this.gridHelper.addFeature("Selection", { multipleSelection: true });
        this.gridHelper.updateFeature("RowSelectors", {
            checkBoxMode: "biState",
            enableCheckBoxes: true,
            enableRowNumbering: false,
            enableSelectAllForPaging: true,
            rowSelectorColumnWidth: null
        });
        this.gridHelper.addFeature("Filtering", {
            columnSettings: [{
                    columnKey: "dateModified",
                    condition: "after"
                },
                {
                    columnKey: "size",
                    condition: "greaterThan"
                }]
        });
        this.gridHelper.addFeature("Paging", { pageSize: 4, mode: "rootLevelOnly" });
        const features = this.gridHelper.generateFeatures(this.userExtraConfiguration["features"], 4);
        const config = { "$(treeGridFeatures)": features };
        return super.generateFiles(projectPath, name, { extraConfig: config });
    }
    getExtraConfiguration() {
        return this.extraConfigurations;
    }
}
module.exports = new FileExplorerTemplate();
