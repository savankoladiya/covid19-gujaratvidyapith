"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const IgniteUIForAngularTemplate_1 = require("../../../../../lib/templates/IgniteUIForAngularTemplate");
class IgxMultiColumnHeadersTemplate extends IgniteUIForAngularTemplate_1.IgniteUIForAngularTemplate {
    constructor() {
        super(__dirname);
        this.userExtraConfiguration = {};
        this.components = ["Grid"];
        this.controlGroup = "Grids & Lists";
        this.listInComponentTemplates = true;
        this.id = "grid-multi-column-headers";
        this.projectType = "igx-ts";
        this.name = "Multi Column Headers";
        this.description = "IgxGrid with multiple header columns.";
        this.dependencies = [
            { import: "IgxGridModule", from: "igniteui-angular" },
            { import: "IgxCheckboxModule", from: "igniteui-angular" },
            { import: "FormsModule", from: "@angular/forms" }
        ];
        this.hasExtraConfiguration = true;
    }
    setExtraConfiguration(extraConfigKeys) {
        this.userExtraConfiguration = extraConfigKeys;
    }
    getExtraConfiguration() {
        return [{
                choices: ["Sorting", "Filtering", "Resizing", "Paging", "Column Pinning", "Moving"],
                default: "",
                key: "columnFeatures",
                message: "Choose features for the igx-grid",
                type: 1 /* MultiChoice */
            }];
    }
    generateFiles(projectPath, name, ...options) {
        const columnFeatures = [];
        const columnBoolFeatures = [];
        const gridFeatures = [];
        const checkBoxBind = `[checked]="cell.value" [disabled]="true"`;
        let selectedFeatures = "";
        if (this.userExtraConfiguration["columnFeatures"]) {
            const features = this.userExtraConfiguration["columnFeatures"];
            for (const feature of this.userExtraConfiguration["columnFeatures"]) {
                switch (feature) {
                    case "Sorting":
                    case "Filtering":
                    case "Resizing":
                    case "Moving":
                        const text = `[${feature.toLowerCase().replace("ing", "able")}]="true"`;
                        columnFeatures.push(text);
                        columnBoolFeatures.push(text);
                        break;
                    case "Row Selection":
                        const gridFeatureText = `rowSelection="multiple"`;
                        gridFeatures.push(gridFeatureText);
                        break;
                    case "Paging":
                        gridFeatures.push(`[paging]="true"`);
                        break;
                }
            }
            selectedFeatures = features.join(", ");
        }
        const extraConfig = {
            "$(checkBoxBind)": checkBoxBind,
            "$(columnBoolFeatures)": columnBoolFeatures.join(" "),
            "$(columnFeatures)": columnFeatures.join(" "),
            "$(gridFeatures)": gridFeatures.join(" "),
            "$(selectedFeatures)": selectedFeatures
        };
        return super.generateFiles(projectPath, name, { extraConfig });
    }
}
module.exports = new IgxMultiColumnHeadersTemplate();
