/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, HostBinding, ElementRef, HostListener } from '@angular/core';
import { isDateInRanges } from '../calendar';
import { CalendarSelection } from '../calendar-base';
/**
 * @hidden
 */
var IgxDayItemComponent = /** @class */ (function () {
    function IgxDayItemComponent(elementRef) {
        this.elementRef = elementRef;
        this.hideOutsideDays = false;
        this.isLastInRange = false;
        this.isFirstInRange = false;
        this.isWithinRange = false;
        this.onDateSelection = new EventEmitter();
        this._selected = false;
    }
    Object.defineProperty(IgxDayItemComponent.prototype, "selected", {
        /**
         * Returns boolean indicating if the day is selected
         *
         */
        get: /**
         * Returns boolean indicating if the day is selected
         *
         * @return {?}
         */
        function () {
            return this._selected;
        },
        /**
         * Selects the day
         */
        set: /**
         * Selects the day
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._selected = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isCurrentMonth", {
        get: /**
         * @return {?}
         */
        function () {
            return this.date.isCurrentMonth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isPreviousMonth", {
        get: /**
         * @return {?}
         */
        function () {
            return this.date.isPrevMonth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isNextMonth", {
        get: /**
         * @return {?}
         */
        function () {
            return this.date.isNextMonth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "nativeElement", {
        get: /**
         * @return {?}
         */
        function () {
            return this.elementRef.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isSelectedCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return (!this.isDisabled && this.selected);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isInactive", {
        get: /**
         * @return {?}
         */
        function () {
            return this.date.isNextMonth || this.date.isPrevMonth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isHidden", {
        get: /**
         * @return {?}
         */
        function () {
            return this.hideOutsideDays && this.isInactive;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isToday", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var today = new Date(Date.now());
            /** @type {?} */
            var date = this.date.date;
            return (date.getFullYear() === today.getFullYear() &&
                date.getMonth() === today.getMonth() &&
                date.getDate() === today.getDate());
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isWeekend", {
        get: /**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var day = this.date.date.getDay();
            return day === 0 || day === 6;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isDisabled", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.disabledDates === null) {
                return false;
            }
            return isDateInRanges(this.date.date, this.disabledDates);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isOutOfRange", {
        get: /**
         * @return {?}
         */
        function () {
            if (!this.outOfRangeDates) {
                return false;
            }
            return isDateInRanges(this.date.date, this.outOfRangeDates);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isFocusable", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isCurrentMonth && !this.isHidden && !this.isDisabled && !this.isOutOfRange;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isWithinRangeCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.isSingleSelection && this.isWithinRange;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isSpecial", {
        get: /**
         * @return {?}
         */
        function () {
            if (this.specialDates === null) {
                return false;
            }
            return isDateInRanges(this.date.date, this.specialDates);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "defaultCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return this.date.isCurrentMonth && !(this.isWeekend && this.selected);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isDisabledCSS", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isHidden || this.isDisabled || this.isOutOfRange;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "isSingleSelection", {
        get: /**
         * @return {?}
         */
        function () {
            return this.selection !== CalendarSelection.RANGE;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxDayItemComponent.prototype, "tabindex", {
        get: /**
         * @return {?}
         */
        function () {
            return this.isDisabled || this.isHidden ? -1 : 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    IgxDayItemComponent.prototype.onSelect = /**
     * @return {?}
     */
    function () {
        this.onDateSelection.emit(this.date);
    };
    IgxDayItemComponent.decorators = [
        { type: Component, args: [{
                    selector: 'igx-day-item',
                    template: "<span class=\"igx-calendar__date-content\">\n    <ng-content></ng-content>\n</span>\n"
                }] }
    ];
    /** @nocollapse */
    IgxDayItemComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    IgxDayItemComponent.propDecorators = {
        date: [{ type: Input }],
        selection: [{ type: Input }],
        selected: [{ type: Input }],
        disabledDates: [{ type: Input }],
        outOfRangeDates: [{ type: Input }],
        specialDates: [{ type: Input }],
        hideOutsideDays: [{ type: Input }],
        isLastInRange: [{ type: Input }, { type: HostBinding, args: ['class.igx-calendar__date--last',] }],
        isFirstInRange: [{ type: Input }, { type: HostBinding, args: ['class.igx-calendar__date--first',] }],
        isWithinRange: [{ type: Input }],
        onDateSelection: [{ type: Output }],
        isSelectedCSS: [{ type: HostBinding, args: ['class.igx-calendar__date--selected',] }],
        isInactive: [{ type: HostBinding, args: ['class.igx-calendar__date--inactive',] }],
        isHidden: [{ type: HostBinding, args: ['class.igx-calendar__date--hidden',] }],
        isToday: [{ type: HostBinding, args: ['class.igx-calendar__date--current',] }],
        isWeekend: [{ type: HostBinding, args: ['class.igx-calendar__date--weekend',] }],
        isWithinRangeCSS: [{ type: HostBinding, args: ['class.igx-calendar__date--range',] }],
        isSpecial: [{ type: HostBinding, args: ['class.igx-calendar__date--special',] }],
        defaultCSS: [{ type: HostBinding, args: ['class.igx-calendar__date',] }],
        isDisabledCSS: [{ type: HostBinding, args: ['class.igx-calendar__date--disabled',] }],
        isSingleSelection: [{ type: HostBinding, args: ['class.igx-calendar__date--single',] }],
        tabindex: [{ type: HostBinding, args: ['attr.tabindex',] }],
        onSelect: [{ type: HostListener, args: ['click',] }, { type: HostListener, args: ['keydown.enter',] }]
    };
    return IgxDayItemComponent;
}());
export { IgxDayItemComponent };
if (false) {
    /** @type {?} */
    IgxDayItemComponent.prototype.date;
    /** @type {?} */
    IgxDayItemComponent.prototype.selection;
    /** @type {?} */
    IgxDayItemComponent.prototype.disabledDates;
    /** @type {?} */
    IgxDayItemComponent.prototype.outOfRangeDates;
    /** @type {?} */
    IgxDayItemComponent.prototype.specialDates;
    /** @type {?} */
    IgxDayItemComponent.prototype.hideOutsideDays;
    /** @type {?} */
    IgxDayItemComponent.prototype.isLastInRange;
    /** @type {?} */
    IgxDayItemComponent.prototype.isFirstInRange;
    /** @type {?} */
    IgxDayItemComponent.prototype.isWithinRange;
    /** @type {?} */
    IgxDayItemComponent.prototype.onDateSelection;
    /**
     * @type {?}
     * @private
     */
    IgxDayItemComponent.prototype._selected;
    /**
     * @type {?}
     * @private
     */
    IgxDayItemComponent.prototype.elementRef;
}
//# sourceMappingURL=data:application/json;base64,