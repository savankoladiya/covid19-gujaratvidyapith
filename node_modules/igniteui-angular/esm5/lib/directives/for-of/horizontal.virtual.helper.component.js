/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ElementRef, HostBinding, Input, ViewChild, ViewContainerRef, ChangeDetectorRef } from '@angular/core';
import { VirtualHelperBaseDirective } from './base.helper.component';
/**
 * @hidden
 */
var HVirtualHelperComponent = /** @class */ (function (_super) {
    tslib_1.__extends(HVirtualHelperComponent, _super);
    function HVirtualHelperComponent(elementRef, cdr) {
        var _this = _super.call(this, elementRef, cdr) || this;
        _this.elementRef = elementRef;
        _this.cdr = cdr;
        _this.cssClasses = 'igx-vhelper--horizontal';
        return _this;
    }
    HVirtualHelperComponent.decorators = [
        { type: Component, args: [{
                    selector: 'igx-horizontal-virtual-helper',
                    template: '<div #horizontal_container class="igx-vhelper__placeholder-content" [style.width.px]="size"></div>'
                }] }
    ];
    /** @nocollapse */
    HVirtualHelperComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: ChangeDetectorRef }
    ]; };
    HVirtualHelperComponent.propDecorators = {
        _vcr: [{ type: ViewChild, args: ['horizontal_container', { read: ViewContainerRef, static: true },] }],
        width: [{ type: Input }],
        cssClasses: [{ type: HostBinding, args: ['class',] }]
    };
    return HVirtualHelperComponent;
}(VirtualHelperBaseDirective));
export { HVirtualHelperComponent };
if (false) {
    /** @type {?} */
    HVirtualHelperComponent.prototype._vcr;
    /** @type {?} */
    HVirtualHelperComponent.prototype.width;
    /** @type {?} */
    HVirtualHelperComponent.prototype.cssClasses;
    /** @type {?} */
    HVirtualHelperComponent.prototype.elementRef;
    /** @type {?} */
    HVirtualHelperComponent.prototype.cdr;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaG9yaXpvbnRhbC52aXJ0dWFsLmhlbHBlci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2RpcmVjdGl2ZXMvZm9yLW9mL2hvcml6b250YWwudmlydHVhbC5oZWxwZXIuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsV0FBVyxFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUgsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0seUJBQXlCLENBQUM7Ozs7QUFLckU7SUFJNkMsbURBQTBCO0lBTW5FLGlDQUFtQixVQUFzQixFQUFTLEdBQXNCO1FBQXhFLFlBQ0ksa0JBQU0sVUFBVSxFQUFFLEdBQUcsQ0FBQyxTQUN4QjtRQUZpQixnQkFBVSxHQUFWLFVBQVUsQ0FBWTtRQUFTLFNBQUcsR0FBSCxHQUFHLENBQW1CO1FBRmpFLGdCQUFVLEdBQUcseUJBQXlCLENBQUM7O0lBSTdDLENBQUM7O2dCQVpMLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsK0JBQStCO29CQUN6QyxRQUFRLEVBQUUsb0dBQW9HO2lCQUNqSDs7OztnQkFUbUIsVUFBVTtnQkFBbUQsaUJBQWlCOzs7dUJBVzdGLFNBQVMsU0FBQyxzQkFBc0IsRUFBRSxFQUFFLElBQUksRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFO3dCQUMxRSxLQUFLOzZCQUNMLFdBQVcsU0FBQyxPQUFPOztJQU14Qiw4QkFBQztDQUFBLEFBYkQsQ0FJNkMsMEJBQTBCLEdBU3RFO1NBVFksdUJBQXVCOzs7SUFDaEMsdUNBQXlGOztJQUN6Rix3Q0FBOEI7O0lBQzlCLDZDQUM4Qzs7SUFFbEMsNkNBQTZCOztJQUFFLHNDQUE2QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRWxlbWVudFJlZiwgSG9zdEJpbmRpbmcsIElucHV0LCBWaWV3Q2hpbGQsIFZpZXdDb250YWluZXJSZWYsIENoYW5nZURldGVjdG9yUmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBWaXJ0dWFsSGVscGVyQmFzZURpcmVjdGl2ZSB9IGZyb20gJy4vYmFzZS5oZWxwZXIuY29tcG9uZW50JztcblxuLyoqXG4gKiBAaGlkZGVuXG4gKi9cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnaWd4LWhvcml6b250YWwtdmlydHVhbC1oZWxwZXInLFxuICAgIHRlbXBsYXRlOiAnPGRpdiAjaG9yaXpvbnRhbF9jb250YWluZXIgY2xhc3M9XCJpZ3gtdmhlbHBlcl9fcGxhY2Vob2xkZXItY29udGVudFwiIFtzdHlsZS53aWR0aC5weF09XCJzaXplXCI+PC9kaXY+J1xufSlcbmV4cG9ydCBjbGFzcyBIVmlydHVhbEhlbHBlckNvbXBvbmVudCBleHRlbmRzIFZpcnR1YWxIZWxwZXJCYXNlRGlyZWN0aXZlIHtcbiAgICBAVmlld0NoaWxkKCdob3Jpem9udGFsX2NvbnRhaW5lcicsIHsgcmVhZDogVmlld0NvbnRhaW5lclJlZiwgc3RhdGljOiB0cnVlIH0pIHB1YmxpYyBfdmNyO1xuICAgIEBJbnB1dCgpIHB1YmxpYyB3aWR0aDogbnVtYmVyO1xuICAgIEBIb3N0QmluZGluZygnY2xhc3MnKVxuICAgIHB1YmxpYyBjc3NDbGFzc2VzID0gJ2lneC12aGVscGVyLS1ob3Jpem9udGFsJztcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyBlbGVtZW50UmVmOiBFbGVtZW50UmVmLCBwdWJsaWMgY2RyOiBDaGFuZ2VEZXRlY3RvclJlZikge1xuICAgICAgICBzdXBlcihlbGVtZW50UmVmLCBjZHIpO1xuICAgICB9XG59XG4iXX0=