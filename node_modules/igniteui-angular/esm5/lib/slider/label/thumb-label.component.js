/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, TemplateRef, HostBinding, ElementRef } from '@angular/core';
import { SliderHandle } from '../slider.common';
var IgxThumbLabelComponent = /** @class */ (function () {
    function IgxThumbLabelComponent(_elementRef) {
        this._elementRef = _elementRef;
    }
    Object.defineProperty(IgxThumbLabelComponent.prototype, "thumbFromClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.type === SliderHandle.FROM;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxThumbLabelComponent.prototype, "thumbToClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.type === SliderHandle.TO;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxThumbLabelComponent.prototype, "thumbFromActiveClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.type === SliderHandle.FROM && this.active;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxThumbLabelComponent.prototype, "thumbToActiveClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this.type === SliderHandle.TO && this.active;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxThumbLabelComponent.prototype, "nativeElement", {
        get: /**
         * @return {?}
         */
        function () {
            return this._elementRef.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxThumbLabelComponent.prototype, "active", {
        get: /**
         * @return {?}
         */
        function () {
            return this._active;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            if (this.continuous) {
                return;
            }
            this._active = val;
        },
        enumerable: true,
        configurable: true
    });
    IgxThumbLabelComponent.decorators = [
        { type: Component, args: [{
                    selector: 'igx-thumb-label',
                    template: "<div class=\"label\">\n    <ng-container *ngTemplateOutlet=\"templateRef ? templateRef : thumbFromDefaultTemplate; context: context\"></ng-container>\n</div>\n\n<ng-template #thumbFromDefaultTemplate>\n    {{ value }}\n</ng-template>\n"
                }] }
    ];
    /** @nocollapse */
    IgxThumbLabelComponent.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    IgxThumbLabelComponent.propDecorators = {
        value: [{ type: Input }],
        templateRef: [{ type: Input }],
        context: [{ type: Input }],
        type: [{ type: Input }],
        continuous: [{ type: Input }],
        thumbFromClass: [{ type: HostBinding, args: ['class.igx-slider__label-from',] }],
        thumbToClass: [{ type: HostBinding, args: ['class.igx-slider__label-to',] }],
        thumbFromActiveClass: [{ type: HostBinding, args: ['class.igx-slider__label-from--active',] }],
        thumbToActiveClass: [{ type: HostBinding, args: ['class.igx-slider__label-to--active',] }]
    };
    return IgxThumbLabelComponent;
}());
export { IgxThumbLabelComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    IgxThumbLabelComponent.prototype._active;
    /** @type {?} */
    IgxThumbLabelComponent.prototype.value;
    /** @type {?} */
    IgxThumbLabelComponent.prototype.templateRef;
    /** @type {?} */
    IgxThumbLabelComponent.prototype.context;
    /** @type {?} */
    IgxThumbLabelComponent.prototype.type;
    /** @type {?} */
    IgxThumbLabelComponent.prototype.continuous;
    /**
     * @type {?}
     * @private
     */
    IgxThumbLabelComponent.prototype._elementRef;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGh1bWItbGFiZWwuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vaWduaXRldWktYW5ndWxhci8iLCJzb3VyY2VzIjpbImxpYi9zbGlkZXIvbGFiZWwvdGh1bWItbGFiZWwuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFZLEtBQUssRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNqRyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFFaEQ7SUEwQ0ksZ0NBQW9CLFdBQXVCO1FBQXZCLGdCQUFXLEdBQVgsV0FBVyxDQUFZO0lBQUksQ0FBQztJQXBCaEQsc0JBQ1csa0RBQWM7Ozs7UUFEekI7WUFFSSxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssWUFBWSxDQUFDLElBQUksQ0FBQztRQUMzQyxDQUFDOzs7T0FBQTtJQUVELHNCQUNXLGdEQUFZOzs7O1FBRHZCO1lBRUksT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLFlBQVksQ0FBQyxFQUFFLENBQUM7UUFDekMsQ0FBQzs7O09BQUE7SUFFRCxzQkFDVyx3REFBb0I7Ozs7UUFEL0I7WUFFSSxPQUFPLElBQUksQ0FBQyxJQUFJLEtBQUssWUFBWSxDQUFDLElBQUksSUFBSSxJQUFJLENBQUMsTUFBTSxDQUFDO1FBQzFELENBQUM7OztPQUFBO0lBRUQsc0JBQ1csc0RBQWtCOzs7O1FBRDdCO1lBRUksT0FBTyxJQUFJLENBQUMsSUFBSSxLQUFLLFlBQVksQ0FBQyxFQUFFLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUN4RCxDQUFDOzs7T0FBQTtJQUlELHNCQUFXLGlEQUFhOzs7O1FBQXhCO1lBQ0ksT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDLGFBQWEsQ0FBQztRQUMxQyxDQUFDOzs7T0FBQTtJQUVELHNCQUFXLDBDQUFNOzs7O1FBQWpCO1lBQ0ksT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO1FBQ3hCLENBQUM7Ozs7O1FBRUQsVUFBa0IsR0FBWTtZQUMxQixJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7Z0JBQ2pCLE9BQU87YUFDVjtZQUVELElBQUksQ0FBQyxPQUFPLEdBQUcsR0FBRyxDQUFDO1FBQ3ZCLENBQUM7OztPQVJBOztnQkFsREosU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxpQkFBaUI7b0JBQzNCLHVQQUF5QztpQkFDNUM7Ozs7Z0JBTjhELFVBQVU7Ozt3QkFVcEUsS0FBSzs4QkFHTCxLQUFLOzBCQUdMLEtBQUs7dUJBR0wsS0FBSzs2QkFHTCxLQUFLO2lDQUdMLFdBQVcsU0FBQyw4QkFBOEI7K0JBSzFDLFdBQVcsU0FBQyw0QkFBNEI7dUNBS3hDLFdBQVcsU0FBQyxzQ0FBc0M7cUNBS2xELFdBQVcsU0FBQyxvQ0FBb0M7O0lBc0JyRCw2QkFBQztDQUFBLEFBM0RELElBMkRDO1NBdkRZLHNCQUFzQjs7Ozs7O0lBQy9CLHlDQUF5Qjs7SUFFekIsdUNBQ3FCOztJQUVyQiw2Q0FDcUM7O0lBRXJDLHlDQUNvQjs7SUFFcEIsc0NBQzBCOztJQUUxQiw0Q0FDMkI7Ozs7O0lBc0JmLDZDQUErQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgTmdNb2R1bGUsIElucHV0LCBUZW1wbGF0ZVJlZiwgSG9zdEJpbmRpbmcsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFNsaWRlckhhbmRsZSB9IGZyb20gJy4uL3NsaWRlci5jb21tb24nO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogJ2lneC10aHVtYi1sYWJlbCcsXG4gICAgdGVtcGxhdGVVcmw6ICd0aHVtYi1sYWJlbC5jb21wb25lbnQuaHRtbCdcbn0pXG5leHBvcnQgY2xhc3MgSWd4VGh1bWJMYWJlbENvbXBvbmVudCB7XG4gICAgcHJpdmF0ZSBfYWN0aXZlOiBib29sZWFuO1xuXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgdmFsdWU6IG51bWJlcjtcblxuICAgIEBJbnB1dCgpXG4gICAgcHVibGljIHRlbXBsYXRlUmVmOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgY29udGV4dDogYW55O1xuXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgdHlwZTogU2xpZGVySGFuZGxlO1xuXG4gICAgQElucHV0KClcbiAgICBwdWJsaWMgY29udGludW91czogYm9vbGVhbjtcblxuICAgIEBIb3N0QmluZGluZygnY2xhc3MuaWd4LXNsaWRlcl9fbGFiZWwtZnJvbScpXG4gICAgcHVibGljIGdldCB0aHVtYkZyb21DbGFzcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudHlwZSA9PT0gU2xpZGVySGFuZGxlLkZST007XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtc2xpZGVyX19sYWJlbC10bycpXG4gICAgcHVibGljIGdldCB0aHVtYlRvQ2xhc3MoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnR5cGUgPT09IFNsaWRlckhhbmRsZS5UTztcbiAgICB9XG5cbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmlneC1zbGlkZXJfX2xhYmVsLWZyb20tLWFjdGl2ZScpXG4gICAgcHVibGljIGdldCB0aHVtYkZyb21BY3RpdmVDbGFzcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudHlwZSA9PT0gU2xpZGVySGFuZGxlLkZST00gJiYgdGhpcy5hY3RpdmU7XG4gICAgfVxuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5pZ3gtc2xpZGVyX19sYWJlbC10by0tYWN0aXZlJylcbiAgICBwdWJsaWMgZ2V0IHRodW1iVG9BY3RpdmVDbGFzcygpIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudHlwZSA9PT0gU2xpZGVySGFuZGxlLlRPICYmIHRoaXMuYWN0aXZlO1xuICAgIH1cblxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgX2VsZW1lbnRSZWY6IEVsZW1lbnRSZWYpIHsgfVxuXG4gICAgcHVibGljIGdldCBuYXRpdmVFbGVtZW50KCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZWxlbWVudFJlZi5uYXRpdmVFbGVtZW50O1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXQgYWN0aXZlKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYWN0aXZlO1xuICAgIH1cblxuICAgIHB1YmxpYyBzZXQgYWN0aXZlKHZhbDogYm9vbGVhbikge1xuICAgICAgICBpZiAodGhpcy5jb250aW51b3VzKSB7XG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLl9hY3RpdmUgPSB2YWw7XG4gICAgfVxufVxuIl19