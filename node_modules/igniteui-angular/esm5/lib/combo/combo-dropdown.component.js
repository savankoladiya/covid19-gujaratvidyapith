/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { ChangeDetectorRef, Component, ElementRef, Inject, QueryList, ContentChildren, Optional } from '@angular/core';
import { IGX_COMBO_COMPONENT } from './combo.common';
import { IGX_DROPDOWN_BASE } from '../drop-down/drop-down.common';
import { IgxDropDownComponent } from '../drop-down/drop-down.component';
import { DropDownActionKey } from '../drop-down/drop-down.common';
import { IgxComboAddItemComponent } from './combo-add-item.component';
import { IgxComboAPIService } from './combo.api';
import { IgxSelectionAPIService } from '../core/selection';
import { IgxComboItemComponent } from './combo-item.component';
import { DisplayDensityToken } from '../core/density';
/**
 * @hidden
 */
var IgxComboDropDownComponent = /** @class */ (function (_super) {
    tslib_1.__extends(IgxComboDropDownComponent, _super);
    function IgxComboDropDownComponent(elementRef, cdr, selection, combo, comboAPI, _displayDensityOptions) {
        var _this = _super.call(this, elementRef, cdr, selection, _displayDensityOptions) || this;
        _this.elementRef = elementRef;
        _this.cdr = cdr;
        _this.selection = selection;
        _this.combo = combo;
        _this.comboAPI = comboAPI;
        _this._displayDensityOptions = _displayDensityOptions;
        /**
         * @hidden
         * \@internal
         */
        _this.children = null;
        _this.scrollHandler = function () {
            _this.comboAPI.disableTransitions = true;
        };
        return _this;
    }
    Object.defineProperty(IgxComboDropDownComponent.prototype, "scrollContainer", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return this.virtDir.dc.location.nativeElement;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxComboDropDownComponent.prototype, "isScrolledToLast", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            /** @type {?} */
            var scrollTop = this.virtDir.scrollPosition;
            /** @type {?} */
            var scrollHeight = this.virtDir.getScroll().scrollHeight;
            return Math.floor(scrollTop + this.virtDir.igxForContainerSize) === scrollHeight;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxComboDropDownComponent.prototype, "lastVisibleIndex", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            return this.combo.totalItemCount ?
                Math.floor(this.combo.itemsMaxHeight / this.combo.itemHeight) :
                this.items.length - 1;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @hidden @internal
     */
    /**
     * @hidden \@internal
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.onFocus = /**
     * @hidden \@internal
     * @return {?}
     */
    function () {
        this.focusedItem = this._focusedItem || this.items[0];
    };
    /**
     * @hidden @internal
     */
    /**
     * @hidden \@internal
     * @param {?=} evt
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.onBlur = /**
     * @hidden \@internal
     * @param {?=} evt
     * @return {?}
     */
    function (evt) {
        this.focusedItem = null;
    };
    /**
     * @hidden @internal
     */
    /**
     * @hidden \@internal
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.onToggleOpened = /**
     * @hidden \@internal
     * @return {?}
     */
    function () {
        this.onOpened.emit();
    };
    /**
     * @hidden
     */
    /**
     * @hidden
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.navigateFirst = /**
     * @hidden
     * @return {?}
     */
    function () {
        this.navigateItem(this.virtDir.igxForOf.findIndex(function (e) { return !e.isHeader; }));
    };
    /**
     * @hidden
     */
    /**
     * @hidden
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.navigatePrev = /**
     * @hidden
     * @return {?}
     */
    function () {
        if (this._focusedItem && this._focusedItem.index === 0 && this.virtDir.state.startIndex === 0) {
            this.combo.focusSearchInput(false);
        }
        else {
            _super.prototype.navigatePrev.call(this);
        }
    };
    /**
     * @hidden
     */
    /**
     * @hidden
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.navigateNext = /**
     * @hidden
     * @return {?}
     */
    function () {
        /** @type {?} */
        var lastIndex = this.combo.totalItemCount ? this.combo.totalItemCount - 1 : this.virtDir.igxForOf.length - 1;
        if (this._focusedItem && this._focusedItem.index === lastIndex) {
            this.focusAddItemButton();
        }
        else {
            _super.prototype.navigateNext.call(this);
        }
    };
    /**
     * @hidden @internal
     */
    /**
     * @hidden \@internal
     * @param {?} item
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.selectItem = /**
     * @hidden \@internal
     * @param {?} item
     * @return {?}
     */
    function (item) {
        if (item === null || item === undefined) {
            return;
        }
        this.comboAPI.set_selected_item(item.itemID);
        this._focusedItem = item;
    };
    /**
     * @private
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.focusAddItemButton = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.combo.isAddButtonVisible()) {
            this.focusedItem = this.items[this.items.length - 1];
        }
    };
    /**
     * @protected
     * @param {?} newItem
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.scrollToHiddenItem = /**
     * @protected
     * @param {?} newItem
     * @return {?}
     */
    function (newItem) { };
    Object.defineProperty(IgxComboDropDownComponent.prototype, "sortedChildren", {
        get: /**
         * @protected
         * @return {?}
         */
        function () {
            if (this.children !== undefined) {
                return this.children.toArray()
                    .sort(function (a, b) {
                    return a.index - b.index;
                });
            }
            return null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(IgxComboDropDownComponent.prototype, "items", {
        /**
         * Get all non-header items
         *
         * ```typescript
         * let myDropDownItems = this.dropdown.items;
         * ```
         */
        get: /**
         * Get all non-header items
         *
         * ```typescript
         * let myDropDownItems = this.dropdown.items;
         * ```
         * @return {?}
         */
        function () {
            var e_1, _a;
            /** @type {?} */
            var items = [];
            if (this.children !== undefined) {
                /** @type {?} */
                var sortedChildren = (/** @type {?} */ (this.sortedChildren));
                try {
                    for (var sortedChildren_1 = tslib_1.__values(sortedChildren), sortedChildren_1_1 = sortedChildren_1.next(); !sortedChildren_1_1.done; sortedChildren_1_1 = sortedChildren_1.next()) {
                        var child = sortedChildren_1_1.value;
                        if (!child.isHeader) {
                            items.push(child);
                        }
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (sortedChildren_1_1 && !sortedChildren_1_1.done && (_a = sortedChildren_1.return)) _a.call(sortedChildren_1);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
            return items;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @hidden @internal
     */
    /**
     * @hidden \@internal
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.updateScrollPosition = /**
     * @hidden \@internal
     * @return {?}
     */
    function () {
        this.virtDir.getScroll().scrollTop = this._scrollPosition;
    };
    /**
     * @hidden @internal
     */
    /**
     * @hidden \@internal
     * @param {?} key
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.onItemActionKey = /**
     * @hidden \@internal
     * @param {?} key
     * @return {?}
     */
    function (key) {
        switch (key) {
            case DropDownActionKey.ENTER:
                this.handleEnter();
                break;
            case DropDownActionKey.SPACE:
                this.handleSpace();
                break;
            case DropDownActionKey.ESCAPE:
                this.close();
        }
    };
    /**
     * @private
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.handleEnter = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.isAddItemFocused()) {
            this.combo.addItemToCollection();
        }
        else {
            this.close();
        }
    };
    /**
     * @private
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.handleSpace = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.isAddItemFocused()) {
            return;
        }
        else {
            this.selectItem(this.focusedItem);
        }
    };
    /**
     * @private
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.isAddItemFocused = /**
     * @private
     * @return {?}
     */
    function () {
        return this.focusedItem instanceof IgxComboAddItemComponent;
    };
    /**
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        this.virtDir.getScroll().addEventListener('scroll', this.scrollHandler);
    };
    /**
     *@hidden @internal
     */
    /**
     * @hidden \@internal
     * @return {?}
     */
    IgxComboDropDownComponent.prototype.ngOnDestroy = /**
     * @hidden \@internal
     * @return {?}
     */
    function () {
        this.virtDir.getScroll().removeEventListener('scroll', this.scrollHandler);
        this.destroy$.next(true);
        this.destroy$.complete();
    };
    IgxComboDropDownComponent.decorators = [
        { type: Component, args: [{
                    selector: 'igx-combo-drop-down',
                    template: "<div class=\"igx-drop-down__list\" igxToggle [style.width]=\"width\" [style.height]=\"height\"\n[style.maxHeight]=\"maxHeight\" [attr.id]=\"this.listId\" role=\"listbox\"\n    (onOpening)=\"onToggleOpening($event)\" (onOpened)=\"onToggleOpened()\"\n    (onClosing)=\"onToggleClosing($event)\" (onClosed)=\"onToggleClosed()\">\n    <ng-container *ngIf=\"!collapsed\">\n        <ng-content></ng-content>\n    </ng-container>\n</div>\n",
                    providers: [{ provide: IGX_DROPDOWN_BASE, useExisting: IgxComboDropDownComponent }]
                }] }
    ];
    /** @nocollapse */
    IgxComboDropDownComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: ChangeDetectorRef },
        { type: IgxSelectionAPIService },
        { type: undefined, decorators: [{ type: Inject, args: [IGX_COMBO_COMPONENT,] }] },
        { type: IgxComboAPIService },
        { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DisplayDensityToken,] }] }
    ]; };
    IgxComboDropDownComponent.propDecorators = {
        children: [{ type: ContentChildren, args: [IgxComboItemComponent, { descendants: true },] }]
    };
    return IgxComboDropDownComponent;
}(IgxDropDownComponent));
export { IgxComboDropDownComponent };
if (false) {
    /**
     * @hidden
     * \@internal
     * @type {?}
     */
    IgxComboDropDownComponent.prototype.children;
    /**
     * @type {?}
     * @protected
     */
    IgxComboDropDownComponent.prototype.scrollHandler;
    /**
     * @type {?}
     * @protected
     */
    IgxComboDropDownComponent.prototype.elementRef;
    /**
     * @type {?}
     * @protected
     */
    IgxComboDropDownComponent.prototype.cdr;
    /**
     * @type {?}
     * @protected
     */
    IgxComboDropDownComponent.prototype.selection;
    /** @type {?} */
    IgxComboDropDownComponent.prototype.combo;
    /**
     * @type {?}
     * @protected
     */
    IgxComboDropDownComponent.prototype.comboAPI;
    /**
     * @type {?}
     * @protected
     */
    IgxComboDropDownComponent.prototype._displayDensityOptions;
}
//# sourceMappingURL=data:application/json;base64,