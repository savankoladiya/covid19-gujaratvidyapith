/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * Generated bundle index. Do not edit.
 */
export { changei18n, getCurrentResourceStrings, InteractionMode, fadeIn, fadeOut, flipTop, flipRight, flipBottom, flipLeft, flipHorFwd, flipHorBck, flipVerFwd, flipVerBck, rotateInCenter, rotateInTop, rotateInRight, rotateInLeft, rotateInBottom, rotateInTr, rotateInBr, rotateInBl, rotateInTl, rotateInDiagonal1, rotateInDiagonal2, rotateInHor, rotateInVer, rotateOutCenter, rotateOutTop, rotateOutRight, rotateOutLeft, rotateOutBottom, rotateOutTr, rotateOutBr, rotateOutBl, rotateOutTl, rotateOutDiagonal1, rotateOutDiagonal2, rotateOutHor, rotateOutVer, shakeHor, shakeVer, shakeTop, shakeBottom, shakeRight, shakeLeft, shakeCenter, shakeTr, shakeBr, shakeBl, shakeTl, heartbeat, pulsateFwd, pulsateBck, blink, scaleInTop, scaleInRight, scaleInBottom, scaleInLeft, scaleInCenter, scaleInTr, scaleInBr, scaleInBl, scaleInTl, scaleInVerTop, scaleInVerBottom, scaleInVerCenter, scaleInHorCenter, scaleInHorLeft, scaleInHorRight, scaleOutTop, scaleOutRight, scaleOutBottom, scaleOutLeft, scaleOutCenter, scaleOutTr, scaleOutBr, scaleOutBl, scaleOutTl, scaleOutVerTop, scaleOutVerBottom, scaleOutVerCenter, scaleOutHorCenter, scaleOutHorLeft, scaleOutHorRight, slideInTop, slideInRight, slideInBottom, slideInLeft, slideInTr, slideInBr, slideInBl, slideInTl, slideOutTop, slideOutBottom, slideOutRight, slideOutLeft, slideOutTr, slideOutBr, slideOutBl, slideOutTl, swingInTopFwd, swingInRightFwd, swingInLeftFwd, swingInBottomFwd, swingInTopBck, swingInRightBck, swingInBottomBck, swingInLeftBck, swingOutTopFwd, swingOutRightFwd, swingOutBottomFwd, swingOutLefttFwd, swingOutTopBck, swingOutRightBck, swingOutBottomBck, swingOutLeftBck, growVerIn, growVerOut, IgxNavigationService, IgxNavigationToggleDirective, IgxNavigationCloseDirective, IgxNavigationModule, IgxAutocompleteDirective, IgxAutocompleteModule, IgxButtonDirective, IgxButtonModule, IgxDividerType, IgxDividerDirective, IgxDividerModule, IgxDefaultDropStrategy, IgxAppendDropStrategy, IgxPrependDropStrategy, IgxInsertDropStrategy, RestrictDrag, IgxDragLocation, IgxDragDirective, IgxDropDirective, IgxDragDropModule, IgxFilterOptions, IgxFilterDirective, IgxFilterPipe, IgxFilterModule, IgxFocusDirective, IgxFocusModule, getTypeNameForDebugging, IgxForOfContext, IgxForOfDirective, IgxGridForOfDirective, IgxForOfModule, IgxLayoutDirective, IgxFlexDirective, IgxLayoutModule, IgxMaskDirective, IgxMaskModule, IgxRadioGroupDirective, IgxRadioModule, IgxRippleDirective, IgxRippleModule, IgxTextHighlightDirective, IgxTextHighlightModule, IgxTextSelectionDirective, IgxTextSelectionModule, IgxToggleDirective, IgxToggleActionDirective, IgxOverlayOutletDirective, IgxToggleModule, IgxTooltipTargetDirective, IgxTooltipDirective, IgxTooltipModule, FilteringLogic, FilteringExpressionsTreeType, FilteringExpressionsTree, IgxFilteringOperand, IgxBooleanFilteringOperand, IgxDateFilteringOperand, IgxNumberFilteringOperand, IgxStringFilteringOperand, filteringStateDefaults, BaseFilteringStrategy, FilteringStrategy, GroupedRecords, IgxGrouping, SortingDirection, DefaultSortingStrategy, IgxSorting, IgxDataRecordSorting, PagingError, DataType, DataUtil, Size, AvatarType, IgxAvatarComponent, IgxAvatarModule, Type, IgxBadgeComponent, IgxBadgeModule, IgxBannerComponent, IgxBannerModule, ButtonGroupAlignment, IgxButtonGroupComponent, IgxButtonGroupModule, range, isLeap, weekDay, monthRange, isDateInRanges, WEEKDAYS, Calendar, IgxCalendarComponent, IgxDaysViewComponent, IgxMonthsViewComponent, CalendarHammerConfig, IgxYearsViewComponent, IgxMonthPickerComponent, CalendarView, IgxMonthPickerBase, IgxCalendarYearDirective, IgxCalendarMonthDirective, IgxCalendarHeaderTemplateDirective, IgxCalendarSubheaderTemplateDirective, IgxCalendarScrollMonthDirective, IgxCalendarModule, IgxCardMediaDirective, IgxCardHeaderComponent, IgxCardThumbnailDirective, IgxCardHeaderTitleDirective, IgxCardHeaderSubtitleDirective, IgxCardContentDirective, IgxCardFooterDirective, IgxCardType, IgxCardComponent, IgxCardActionsLayout, IgxCardActionsComponent, IgxCardModule, Direction, IgxCarouselComponent, IgxSlideComponent, IgxCarouselModule, LabelPosition, IgxCheckboxComponent, IGX_CHECKBOX_REQUIRED_VALIDATOR, IgxCheckboxRequiredDirective, IgxCheckboxModule, IgxChipComponent, IgxChipsAreaComponent, IgxChipsModule, IgxPrefixDirective, IgxPrefixModule, IgxSuffixDirective, IgxSuffixModule, IgxComboState, IgxComboComponent, IgxComboModule, PredefinedFormatOptions, IgxDatePickerComponent, IgxDatePickerModule, IgxDialogComponent, IgxDialogModule, IgxDropDownModule, IgxDropDownComponent, IgxDropDownItemComponent, IgxDropDownItemNavigationDirective, IgxDropDownBase, IgxDropDownItemBase, IgxDropDownGroupComponent, ColumnDisplayOrder, GridBaseAPIService, IgxGridCellComponent, IgxRowComponent, IgxColumnComponent, IgxColumnGroupComponent, IgxColumnLayoutComponent, IgxGridTransaction, IgxGridBaseComponent, IgxResizeHandleDirective, IgxColumnResizerDirective, IgxColumnMovingService, DropPosition, IgxColumnMovingDragDirective, IgxColumnMovingDropDirective, IgxGridBodyDirective, IgxDatePipeComponent, IgxDecimalPipeComponent, RowEditPositionStrategy, IgxSummaryOperand, IgxNumberSummaryOperand, IgxDateSummaryOperand, IgxGridCommonModule, IgxColumnHidingComponent, IgxColumnHidingModule, IgxColumnPinningItemDirective, IgxColumnPinningComponent, IgxColumnPinningModule, IgxGridGroupByRowComponent, IgxGridComponent, IgxGroupByRowTemplateDirective, IgxRowExpandedIndicatorDirective, IgxRowCollapsedIndicatorDirective, IgxHeaderExpandIndicatorDirective, IgxHeaderCollapseIndicatorDirective, IgxGroupAreaDropDirective, IgxGridModule, IgxGridAPIService, IgxGridRowComponent, IgxTreeGridComponent, IgxTreeGridModule, IgxTreeGridAPIService, IgxTreeGridRowComponent, IgxTreeGridCellComponent, hierarchicalTransactionServiceFactory, IgxHierarchicalTransactionServiceFactory, IgxHierarchicalGridBaseComponent, IgxHierarchicalGridComponent, IgxHierarchicalGridModule, IgxHierarchicalGridAPIService, IgxHierarchicalRowComponent, IgxHierarchicalGridCellComponent, IgxRowIslandAPIService, IgxRowIslandComponent, FilterMode, GridSummaryPosition, GridSummaryCalculationMode, GridKeydownTargetType, GridSelectionMode, IgxFilterCellTemplateDirective, IgxCellTemplateDirective, IgxCellHeaderTemplateDirective, IgxCellFooterTemplateDirective, IgxCellEditorTemplateDirective, IgxIconModule, IgxIconComponent, IgxIconService, IgxInputGroupComponent, IgxInputGroupModule, IgxInputState, IgxInputDirective, IgxLabelDirective, IgxHintDirective, IgxListThumbnailDirective, IgxListActionDirective, IgxListLineDirective, IgxListLineTitleDirective, IgxListLineSubTitleDirective, IgxListComponent, IgxListModule, IgxListBase, IgxListPanState, IgxEmptyListTemplateDirective, IgxDataLoadingTemplateDirective, IgxListItemLeftPanningTemplateDirective, IgxListItemRightPanningTemplateDirective, IgxListItemComponent, IgxExpansionPanelHeaderComponent, IgxExpansionPanelBodyComponent, IgxExpansionPanelComponent, IgxExpansionPanelModule, IgxActionIconDirective, IgxNavbarComponent, IgxNavbarModule, IgxNavigationDrawerComponent, IgxNavDrawerItemDirective, IgxNavDrawerTemplateDirective, IgxNavDrawerMiniTemplateDirective, IgxNavigationDrawerModule, IgxPaginatorComponent, IgxPaginatorModule, getValueInProperRange, convertInPercentage, IgxTextAlign, IgxProgressType, BaseProgress, IgxLinearProgressBarComponent, IgxCircularProgressBarComponent, IgxProgressBarModule, RadioLabelPosition, IgxRadioComponent, IgxSliderComponent, IgxSliderModule, IgxThumbFromTemplateDirective, IgxThumbToTemplateDirective, SliderType, SliderHandle, IgxSnackbarComponent, IgxSnackbarModule, SwitchLabelPosition, IgxSwitchComponent, IGX_SWITCH_REQUIRED_VALIDATOR, IgxSwitchRequiredDirective, IgxSwitchModule, IgxTabTemplateDirective, IgxBottomNavComponent, IgxTabPanelComponent, IgxTabComponent, IgxBottomNavModule, TabsType, IgxTabsComponent, IgxTabsModule, IgxTabItemComponent, IgxTabsGroupComponent, IgxRightButtonStyleDirective, IgxLeftButtonStyleDirective, IgxTabItemTemplateDirective, TimePickerHammerConfig, IgxTimePickerComponent, IgxTimePickerModule, IgxToastComponent, IgxToastPosition, IgxToastModule, IgxSelectGroupComponent, IgxSelectItemComponent, IgxSelectToggleIconDirective, IgxSelectComponent, IgxSelectModule, HorizontalAlignment, VerticalAlignment, Point, IgxCsvExporterService, IgxCsvExporterOptions, CsvFileTypes, IgxExcelExporterService, IgxExcelExporterOptions, IgxBaseExporter, IgxExporterOptionsBase, IgxOverlayService, GlobalPositionStrategy, ContainerPositionStrategy, ConnectedPositioningStrategy, AutoPositionStrategy, ElasticPositionStrategy, ScrollStrategy, AbsoluteScrollStrategy, BlockScrollStrategy, CloseScrollStrategy, NoOpScrollStrategy, IgxTransactionService, IgxBaseTransactionService, TransactionType, IgxHierarchicalTransactionService, DateRangeType, DisplayDensity, DisplayDensityToken, DisplayDensityBase } from './public_api';
export { EaseIn as ɵh, EaseOut as ɵi } from './lib/animations/easings';
export { IgxBannerActionsDirective as ɵy } from './lib/banner/banner.directives';
export { IgxCalendarBase as ɵbc } from './lib/calendar/calendar-base';
export { IgxDayItemComponent as ɵbe } from './lib/calendar/days-view/day-item.component';
export { IgxDaysViewNavigationService as ɵbd } from './lib/calendar/days-view/daysview-navigation.service';
export { IgxGetViewDateCalendar as ɵbg, IgxMonthViewSlotsCalendar as ɵbf } from './lib/calendar/months-view.pipe';
export { IgxChipComponent as ɵdc, IgxChipsAreaComponent as ɵdb } from './lib/chips';
export { IgxComboAddItemComponent as ɵby } from './lib/combo/combo-add-item.component';
export { IgxComboDropDownComponent as ɵbk } from './lib/combo/combo-dropdown.component';
export { IgxComboItemComponent as ɵbl } from './lib/combo/combo-item.component';
export { IgxComboAPIService as ɵbh } from './lib/combo/combo.api';
export { IGX_COMBO_COMPONENT as ɵbi } from './lib/combo/combo.common';
export { IgxComboAddItemDirective as ɵbr, IgxComboClearIconDirective as ɵbt, IgxComboEmptyDirective as ɵbp, IgxComboFooterDirective as ɵbn, IgxComboHeaderDirective as ɵbm, IgxComboHeaderItemDirective as ɵbq, IgxComboItemDirective as ɵbo, IgxComboToggleIconDirective as ɵbs } from './lib/combo/combo.directives';
export { IgxComboFilterConditionPipe as ɵbx, IgxComboFilteringPipe as ɵbu, IgxComboGroupingPipe as ɵbw, IgxComboSortingPipe as ɵbv } from './lib/combo/combo.pipes';
export { DeprecateMethod as ɵm, DeprecateProperty as ɵn } from './lib/core/deprecateDecorators';
export { IgxGridCRUDService as ɵcj, IgxGridSelectionService as ɵck } from './lib/core/grid-selection';
export { IgxSelectionAPIService as ɵo } from './lib/core/selection';
export { HammerGesturesManager as ɵci } from './lib/core/touch';
export { PlatformUtil as ɵg } from './lib/core/utils';
export { getHierarchy as ɵx, isHierarchyMatch as ɵw } from './lib/data-operations/operations';
export { IgxCalendarContainerComponent as ɵcb } from './lib/date-picker/calendar-container.component';
export { IGX_DATE_PICKER_COMPONENT as ɵce } from './lib/date-picker/date-picker.common';
export { IgxDatePickerActionsDirective as ɵca, IgxDatePickerTemplateDirective as ɵbz } from './lib/date-picker/date-picker.directives';
export { DatePickerDisplayValuePipe as ɵcc, DatePickerInputValuePipe as ɵcd } from './lib/date-picker/date-picker.pipes';
export { IgxDialogActionsDirective as ɵch, IgxDialogTitleDirective as ɵcg } from './lib/dialog/dialog.directives';
export { IgxDragHandleDirective as ɵp } from './lib/directives/drag-drop/drag-handle.directive';
export { VirtualHelperBaseDirective as ɵs } from './lib/directives/for-of/base.helper.component';
export { DisplayContainerComponent as ɵq } from './lib/directives/for-of/display.container';
export { IgxForOfScrollSyncService as ɵl, IgxForOfSyncService as ɵk } from './lib/directives/for-of/for_of.sync.service';
export { HVirtualHelperComponent as ɵt } from './lib/directives/for-of/horizontal.virtual.helper.component';
export { VirtualHelperComponent as ɵr } from './lib/directives/for-of/virtual.helper.component';
export { IgxScrollInertiaDirective as ɵu, IgxScrollInertiaModule as ɵv } from './lib/directives/scroll-inertia/scroll_inertia.directive';
export { IgxTemplateOutletDirective as ɵdq, IgxTemplateOutletModule as ɵdr } from './lib/directives/template-outlet/template_outlet.directive';
export { IgxDropDownComponent as ɵep } from './lib/drop-down';
export { IGX_DROPDOWN_BASE as ɵa } from './lib/drop-down/drop-down.common';
export { IGX_EXPANSION_PANEL_COMPONENT as ɵf } from './lib/expansion-panel/expansion-panel.common';
export { IgxExpansionPanelDescriptionDirective as ɵba, IgxExpansionPanelIconDirective as ɵbb, IgxExpansionPanelTitleDirective as ɵz } from './lib/expansion-panel/expansion-panel.directives';
export { ColumnChooserBase as ɵc } from './lib/grids/column-chooser-base';
export { ColumnChooserItemBase as ɵed, ItemPropertyValueChanged as ɵec } from './lib/grids/column-chooser-item-base';
export { IgxColumnHidingItemDirective as ɵd } from './lib/grids/column-hiding-item.directive';
export { IgxGridDragSelectDirective as ɵdz } from './lib/grids/drag-select.directive';
export { IgxAdvancedFilteringDialogComponent as ɵeb } from './lib/grids/filtering/advanced-filtering/advanced-filtering-dialog.component';
export { IgxExcelStyleColumnMovingComponent as ɵeu } from './lib/grids/filtering/excel-style/excel-style-column-moving.component';
export { IgxExcelStyleCustomDialogComponent as ɵeq } from './lib/grids/filtering/excel-style/excel-style-custom-dialog.component';
export { IgxExcelStyleDateExpressionComponent as ɵes } from './lib/grids/filtering/excel-style/excel-style-date-expression.component';
export { IgxExcelStyleDefaultExpressionComponent as ɵer } from './lib/grids/filtering/excel-style/excel-style-default-expression.component';
export { IgxExcelStyleLoadingValuesTemplateDirective as ɵcv, IgxExcelStyleSearchComponent as ɵcw } from './lib/grids/filtering/excel-style/excel-style-search.component';
export { IgxExcelStyleSearchFilterPipe as ɵev } from './lib/grids/filtering/excel-style/excel-style-search.pipe';
export { IgxExcelStyleSortingComponent as ɵet } from './lib/grids/filtering/excel-style/excel-style-sorting.component';
export { IgxExcelStyleHidingTemplateDirective as ɵcs, IgxExcelStyleMovingTemplateDirective as ɵcr, IgxExcelStylePinningTemplateDirective as ɵct, IgxExcelStyleSortingTemplateDirective as ɵcq, IgxGridExcelStyleFilteringComponent as ɵcu } from './lib/grids/filtering/excel-style/grid.excel-style-filtering.component';
export { IgxGridExcelStyleFilteringModule as ɵeo } from './lib/grids/filtering/excel-style/grid.excel-style-filtering.module';
export { IgxGridFilteringCellComponent as ɵda } from './lib/grids/filtering/grid-filtering-cell.component';
export { IgxGridFilteringRowComponent as ɵdp } from './lib/grids/filtering/grid-filtering-row.component';
export { IgxFilteringService as ɵcz } from './lib/grids/filtering/grid-filtering.service';
export { GridBaseAPIService as ɵfm } from './lib/grids/grid';
export { IgxGridColumnResizerComponent as ɵco } from './lib/grids/grid-column-resizer.component';
export { IgxColumnResizingService as ɵcp } from './lib/grids/grid-column-resizing.service';
export { IgxGridCellStyleClassesPipe as ɵeg, IgxGridCellStylesPipe as ɵeh, IgxGridFilterConditionPipe as ɵek, IgxGridNotGroupedPipe as ɵei, IgxGridPaginatorOptionsPipe as ɵem, IgxGridTopLevelColumns as ɵej, IgxGridTransactionPipe as ɵel, IgxHasVisibleColumnsPipe as ɵen } from './lib/grids/grid-common.pipes';
export { IgxGridFooterComponent as ɵea } from './lib/grids/grid-footer/grid-footer.component';
export { IgxGridHeaderGroupComponent as ɵcx } from './lib/grids/grid-header-group.component';
export { IgxGridHeaderComponent as ɵcy } from './lib/grids/grid-header.component';
export { IgxGridNavigationService as ɵdd } from './lib/grids/grid-navigation.service';
export { IgxGridPipesModule as ɵef } from './lib/grids/grid-pipes.module';
export { IgxGridToolbarComponent as ɵdg, IgxGridToolbarCustomContentDirective as ɵdh } from './lib/grids/grid-toolbar.component';
export { IgxRowEditActionsDirective as ɵdu, IgxRowEditTabStopDirective as ɵdv, IgxRowEditTemplateDirective as ɵds, IgxRowEditTextDirective as ɵdt } from './lib/grids/grid.rowEdit.directive';
export { IgxGridFilteringPipe as ɵfa, IgxGridGroupingPipe as ɵey, IgxGridPagingPipe as ɵez, IgxGridSortingPipe as ɵex } from './lib/grids/grid/grid.pipes';
export { IgxGridSummaryPipe as ɵfb } from './lib/grids/grid/grid.summary.pipe';
export { IgxChildGridRowComponent as ɵfn } from './lib/grids/hierarchical-grid/child-grid-row.component';
export { IgxHierarchicalGridNavigationService as ɵfl } from './lib/grids/hierarchical-grid/hierarchical-grid-navigation.service';
export { IgxGridHierarchicalPagingPipe as ɵfp, IgxGridHierarchicalPipe as ɵfo } from './lib/grids/hierarchical-grid/hierarchical-grid.pipes';
export { IgxHeadSelectorDirective as ɵdj, IgxRowSelectorDirective as ɵdi, IgxRowSelectorsModule as ɵdk } from './lib/grids/igx-row-selectors.module';
export { IgxDragIndicatorIconDirective as ɵdm, IgxRowDragDirective as ɵdl, IgxRowDragGhostDirective as ɵdn, IgxRowDragModule as ɵdo } from './lib/grids/row-drag.directive';
export { IgxSummaryDataPipe as ɵdy } from './lib/grids/summaries/grid-root-summary.pipe';
export { IgxGridSummaryService as ɵdw } from './lib/grids/summaries/grid-summary.service';
export { IgxSummaryCellComponent as ɵdf } from './lib/grids/summaries/summary-cell.component';
export { IgxSummaryRowComponent as ɵde } from './lib/grids/summaries/summary-row.component';
export { IgxTreeGridNavigationService as ɵfc } from './lib/grids/tree-grid/tree-grid-navigation.service';
export { IgxRowLoadingIndicatorTemplateDirective as ɵfd } from './lib/grids/tree-grid/tree-grid.directives';
export { IgxTreeGridFilteringPipe as ɵfj } from './lib/grids/tree-grid/tree-grid.filtering.pipe';
export { IgxTreeGridFlatteningPipe as ɵff, IgxTreeGridHierarchizingPipe as ɵfe, IgxTreeGridPagingPipe as ɵfh, IgxTreeGridSortingPipe as ɵfg, IgxTreeGridTransactionPipe as ɵfi } from './lib/grids/tree-grid/tree-grid.pipes';
export { IgxTreeGridSummaryPipe as ɵfk } from './lib/grids/tree-grid/tree-grid.summary.pipe';
export { WatchChanges as ɵcl, WatchColumnChanges as ɵcm, notifyChanges as ɵcn } from './lib/grids/watch-changes';
export { IgxInputGroupBase as ɵj } from './lib/input-group/input-group.common';
export { IgxProcessBarTextTemplateDirective as ɵee } from './lib/progressbar/progressbar.common';
export { IgxSelectItemNavigationDirective as ɵew } from './lib/select/select-navigation.directive';
export { ConnectedPositioningStrategy as ɵdx } from './lib/services';
export { IgxThumbLabelComponent as ɵfr } from './lib/slider/label/thumb-label.component';
export { IgxSliderThumbComponent as ɵfq } from './lib/slider/thumb/thumb-slider.component';
export { IgxTabItemBase as ɵft, IgxTabsBase as ɵfs, IgxTabsGroupBase as ɵfu } from './lib/tabs/tabs.common';
export { IGX_TIME_PICKER_COMPONENT as ɵfv } from './lib/time-picker/time-picker.common';
export { IgxAmPmItemDirective as ɵga, IgxHourItemDirective as ɵfy, IgxItemListDirective as ɵfx, IgxMinuteItemDirective as ɵfz, IgxTimePickerActionsDirective as ɵgc, IgxTimePickerTemplateDirective as ɵgb } from './lib/time-picker/time-picker.directives';
export { TimeDisplayFormatPipe as ɵgd, TimeInputFormatPipe as ɵge } from './lib/time-picker/time-picker.pipes';
//# sourceMappingURL=data:application/json;base64,