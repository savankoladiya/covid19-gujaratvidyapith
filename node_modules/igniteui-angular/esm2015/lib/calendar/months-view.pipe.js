/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { Calendar } from './calendar';
export class IgxMonthViewSlotsCalendar {
    /**
     * @param {?} monthViews
     * @return {?}
     */
    transform(monthViews) {
        return new Array(monthViews);
    }
}
IgxMonthViewSlotsCalendar.decorators = [
    { type: Pipe, args: [{
                name: 'IgxMonthViewSlots'
            },] }
];
export class IgxGetViewDateCalendar {
    constructor() {
        this.calendar = new Calendar();
    }
    /**
     * @param {?} index
     * @param {?} viewDate
     * @param {?=} wholeDate
     * @return {?}
     */
    transform(index, viewDate, wholeDate = true) {
        /** @type {?} */
        const date = this.calendar.timedelta(viewDate, 'month', index);
        return wholeDate ? date : date.getMonth();
    }
}
IgxGetViewDateCalendar.decorators = [
    { type: Pipe, args: [{
                name: 'IgxGetViewDate'
            },] }
];
/** @nocollapse */
IgxGetViewDateCalendar.ctorParameters = () => [];
if (false) {
    /**
     * @type {?}
     * @private
     */
    IgxGetViewDateCalendar.prototype.calendar;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9udGhzLXZpZXcucGlwZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvY2FsZW5kYXIvbW9udGhzLXZpZXcucGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7QUFDcEQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLFlBQVksQ0FBQztBQUt0QyxNQUFNLE9BQU8seUJBQXlCOzs7OztJQUMzQixTQUFTLENBQUMsVUFBa0I7UUFDL0IsT0FBTyxJQUFJLEtBQUssQ0FBQyxVQUFVLENBQUMsQ0FBQztJQUNqQyxDQUFDOzs7WUFOSixJQUFJLFNBQUM7Z0JBQ0YsSUFBSSxFQUFFLG1CQUFtQjthQUM1Qjs7QUFVRCxNQUFNLE9BQU8sc0JBQXNCO0lBRS9CO1FBQ0ksSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLFFBQVEsRUFBRSxDQUFDO0lBQ25DLENBQUM7Ozs7Ozs7SUFDTSxTQUFTLENBQUMsS0FBYSxFQUFFLFFBQWMsRUFBRSxTQUFTLEdBQUcsSUFBSTs7Y0FDdEQsSUFBSSxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUUsS0FBSyxDQUFDO1FBQzlELE9BQU8sU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztJQUM5QyxDQUFDOzs7WUFYSixJQUFJLFNBQUM7Z0JBQ0YsSUFBSSxFQUFFLGdCQUFnQjthQUN6Qjs7Ozs7Ozs7O0lBRUcsMENBQTJCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ2FsZW5kYXIgfSBmcm9tICcuL2NhbGVuZGFyJztcblxuQFBpcGUoe1xuICAgIG5hbWU6ICdJZ3hNb250aFZpZXdTbG90cydcbn0pXG5leHBvcnQgY2xhc3MgSWd4TW9udGhWaWV3U2xvdHNDYWxlbmRhciBpbXBsZW1lbnRzIFBpcGVUcmFuc2Zvcm0ge1xuICAgIHB1YmxpYyB0cmFuc2Zvcm0obW9udGhWaWV3czogbnVtYmVyKSB7XG4gICAgICAgIHJldHVybiBuZXcgQXJyYXkobW9udGhWaWV3cyk7XG4gICAgfVxufVxuXG5AUGlwZSh7XG4gICAgbmFtZTogJ0lneEdldFZpZXdEYXRlJ1xufSlcbmV4cG9ydCBjbGFzcyBJZ3hHZXRWaWV3RGF0ZUNhbGVuZGFyIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XG4gICAgcHJpdmF0ZSBjYWxlbmRhcjogQ2FsZW5kYXI7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHRoaXMuY2FsZW5kYXIgPSBuZXcgQ2FsZW5kYXIoKTtcbiAgICB9XG4gICAgcHVibGljIHRyYW5zZm9ybShpbmRleDogbnVtYmVyLCB2aWV3RGF0ZTogRGF0ZSwgd2hvbGVEYXRlID0gdHJ1ZSkge1xuICAgICAgICBjb25zdCBkYXRlID0gdGhpcy5jYWxlbmRhci50aW1lZGVsdGEodmlld0RhdGUsICdtb250aCcsIGluZGV4KTtcbiAgICAgICAgcmV0dXJuIHdob2xlRGF0ZSA/IGRhdGUgOiBkYXRlLmdldE1vbnRoKCk7XG4gICAgfVxufVxuIl19