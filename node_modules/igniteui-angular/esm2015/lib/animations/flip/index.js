/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { animate, animation, keyframes, style } from '@angular/animations';
import { EaseOut } from '../easings';
/** @type {?} */
const baseRecipe = [
    style({
        backfaceVisibility: 'hidden',
        transformStyle: 'preserve-3d'
    }),
    animate(`{{duration}} {{delay}} {{easing}}`, keyframes([
        style({
            offset: 0,
            transform: `translateZ({{startDistance}})
                rotate3d({{rotateX}}, {{rotateY}}, {{rotateZ}}, {{startAngle}}deg)`
        }),
        style({
            offset: 1,
            transform: `translateZ({{endDistance}})
                rotate3d({{rotateX}}, {{rotateY}}, {{rotateZ}}, {{endAngle}}deg)`
        })
    ]))
];
/** @type {?} */
const baseParams = {
    delay: '0s',
    duration: '600ms',
    easing: EaseOut.quad,
    endAngle: 180,
    endDistance: '0px',
    rotateX: 1,
    rotateY: 0,
    rotateZ: 0,
    startAngle: 0,
    startDistance: '0px'
};
/** @type {?} */
const flipTop = animation(baseRecipe, {
    params: Object.assign({}, baseParams)
});
/** @type {?} */
const flipBottom = animation(baseRecipe, {
    params: Object.assign({}, baseParams, { endAngle: -180 })
});
/** @type {?} */
const flipLeft = animation(baseRecipe, {
    params: Object.assign({}, baseParams, { rotateX: 0, rotateY: 1 })
});
/** @type {?} */
const flipRight = animation(baseRecipe, {
    params: Object.assign({}, baseParams, { endAngle: -180, rotateX: 0, rotateY: 1 })
});
/** @type {?} */
const flipHorFwd = animation(baseRecipe, {
    params: Object.assign({}, baseParams, { endDistance: '170px' })
});
/** @type {?} */
const flipHorBck = animation(baseRecipe, {
    params: Object.assign({}, baseParams, { endDistance: '-170px' })
});
/** @type {?} */
const flipVerFwd = animation(baseRecipe, {
    params: Object.assign({}, baseParams, { endDistance: '170px', rotateX: 0, rotateY: 1 })
});
/** @type {?} */
const flipVerBck = animation(baseRecipe, {
    params: Object.assign({}, baseParams, { endDistance: '-170px', rotateX: 0, rotateY: 1 })
});
export { flipTop, flipRight, flipBottom, flipLeft, flipHorFwd, flipHorBck, flipVerFwd, flipVerBck };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290Ijoibmc6Ly9pZ25pdGV1aS1hbmd1bGFyLyIsInNvdXJjZXMiOlsibGliL2FuaW1hdGlvbnMvZmxpcC9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUNILE9BQU8sRUFDUCxTQUFTLEVBR1QsU0FBUyxFQUNULEtBQUssRUFDUixNQUFNLHFCQUFxQixDQUFDO0FBQzdCLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxZQUFZLENBQUM7O01BRy9CLFVBQVUsR0FBd0I7SUFDcEMsS0FBSyxDQUFDO1FBQ0Ysa0JBQWtCLEVBQUUsUUFBUTtRQUM1QixjQUFjLEVBQUUsYUFBYTtLQUNoQyxDQUFDO0lBQ0YsT0FBTyxDQUNILG1DQUFtQyxFQUNuQyxTQUFTLENBQUM7UUFDTixLQUFLLENBQUM7WUFDRixNQUFNLEVBQUUsQ0FBQztZQUNULFNBQVMsRUFBRTttRkFDd0Q7U0FDdEUsQ0FBQztRQUNGLEtBQUssQ0FBQztZQUNGLE1BQU0sRUFBRSxDQUFDO1lBQ1QsU0FBUyxFQUFFO2lGQUNzRDtTQUNwRSxDQUFDO0tBQ0wsQ0FBQyxDQUNMO0NBQ0o7O01BRUssVUFBVSxHQUFxQjtJQUNqQyxLQUFLLEVBQUUsSUFBSTtJQUNYLFFBQVEsRUFBRSxPQUFPO0lBQ2pCLE1BQU0sRUFBRSxPQUFPLENBQUMsSUFBSTtJQUNwQixRQUFRLEVBQUUsR0FBRztJQUNiLFdBQVcsRUFBRSxLQUFLO0lBQ2xCLE9BQU8sRUFBRSxDQUFDO0lBQ1YsT0FBTyxFQUFFLENBQUM7SUFDVixPQUFPLEVBQUUsQ0FBQztJQUNWLFVBQVUsRUFBRSxDQUFDO0lBQ2IsYUFBYSxFQUFFLEtBQUs7Q0FDdkI7O01BRUssT0FBTyxHQUErQixTQUFTLENBQUMsVUFBVSxFQUFFO0lBQzlELE1BQU0sb0JBQ0MsVUFBVSxDQUNoQjtDQUNKLENBQUM7O01BRUksVUFBVSxHQUErQixTQUFTLENBQUMsVUFBVSxFQUFFO0lBQ2pFLE1BQU0sb0JBQ0MsVUFBVSxJQUNiLFFBQVEsRUFBRSxDQUFDLEdBQUcsR0FDakI7Q0FDSixDQUFDOztNQUVJLFFBQVEsR0FBK0IsU0FBUyxDQUFDLFVBQVUsRUFBRTtJQUMvRCxNQUFNLG9CQUNDLFVBQVUsSUFDYixPQUFPLEVBQUUsQ0FBQyxFQUNWLE9BQU8sRUFBRSxDQUFDLEdBQ2I7Q0FDSixDQUFDOztNQUVJLFNBQVMsR0FBK0IsU0FBUyxDQUFDLFVBQVUsRUFBRTtJQUNoRSxNQUFNLG9CQUNDLFVBQVUsSUFDYixRQUFRLEVBQUUsQ0FBQyxHQUFHLEVBQ2QsT0FBTyxFQUFFLENBQUMsRUFDVixPQUFPLEVBQUUsQ0FBQyxHQUNiO0NBQ0osQ0FBQzs7TUFFSSxVQUFVLEdBQStCLFNBQVMsQ0FBQyxVQUFVLEVBQUU7SUFDakUsTUFBTSxvQkFDQyxVQUFVLElBQ2IsV0FBVyxFQUFFLE9BQU8sR0FDdkI7Q0FDSixDQUFDOztNQUVJLFVBQVUsR0FBK0IsU0FBUyxDQUFDLFVBQVUsRUFBRTtJQUNqRSxNQUFNLG9CQUNDLFVBQVUsSUFDYixXQUFXLEVBQUUsUUFBUSxHQUN4QjtDQUNKLENBQUM7O01BRUksVUFBVSxHQUErQixTQUFTLENBQUMsVUFBVSxFQUFFO0lBQ2pFLE1BQU0sb0JBQ0MsVUFBVSxJQUNiLFdBQVcsRUFBRSxPQUFPLEVBQ3BCLE9BQU8sRUFBRSxDQUFDLEVBQ1YsT0FBTyxFQUFFLENBQUMsR0FDYjtDQUNKLENBQUM7O01BRUksVUFBVSxHQUErQixTQUFTLENBQUMsVUFBVSxFQUFFO0lBQ2pFLE1BQU0sb0JBQ0MsVUFBVSxJQUNiLFdBQVcsRUFBRSxRQUFRLEVBQ3JCLE9BQU8sRUFBRSxDQUFDLEVBQ1YsT0FBTyxFQUFFLENBQUMsR0FDYjtDQUNKLENBQUM7QUFFRixPQUFPLEVBQ0gsT0FBTyxFQUNQLFNBQVMsRUFDVCxVQUFVLEVBQ1YsUUFBUSxFQUNSLFVBQVUsRUFDVixVQUFVLEVBQ1YsVUFBVSxFQUNWLFVBQVUsRUFDYixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBhbmltYXRlLFxuICAgIGFuaW1hdGlvbixcbiAgICBBbmltYXRpb25NZXRhZGF0YSxcbiAgICBBbmltYXRpb25SZWZlcmVuY2VNZXRhZGF0YSxcbiAgICBrZXlmcmFtZXMsXG4gICAgc3R5bGVcbn0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQgeyBFYXNlT3V0IH0gZnJvbSAnLi4vZWFzaW5ncyc7XG5pbXBvcnQgeyBJQW5pbWF0aW9uUGFyYW1zIH0gZnJvbSAnLi4vaW50ZXJmYWNlJztcblxuY29uc3QgYmFzZVJlY2lwZTogQW5pbWF0aW9uTWV0YWRhdGFbXSA9IFtcbiAgICBzdHlsZSh7XG4gICAgICAgIGJhY2tmYWNlVmlzaWJpbGl0eTogJ2hpZGRlbicsXG4gICAgICAgIHRyYW5zZm9ybVN0eWxlOiAncHJlc2VydmUtM2QnXG4gICAgfSksXG4gICAgYW5pbWF0ZShcbiAgICAgICAgYHt7ZHVyYXRpb259fSB7e2RlbGF5fX0ge3tlYXNpbmd9fWAsXG4gICAgICAgIGtleWZyYW1lcyhbXG4gICAgICAgICAgICBzdHlsZSh7XG4gICAgICAgICAgICAgICAgb2Zmc2V0OiAwLFxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZVooe3tzdGFydERpc3RhbmNlfX0pXG4gICAgICAgICAgICAgICAgcm90YXRlM2Qoe3tyb3RhdGVYfX0sIHt7cm90YXRlWX19LCB7e3JvdGF0ZVp9fSwge3tzdGFydEFuZ2xlfX1kZWcpYFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBzdHlsZSh7XG4gICAgICAgICAgICAgICAgb2Zmc2V0OiAxLFxuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZVooe3tlbmREaXN0YW5jZX19KVxuICAgICAgICAgICAgICAgIHJvdGF0ZTNkKHt7cm90YXRlWH19LCB7e3JvdGF0ZVl9fSwge3tyb3RhdGVafX0sIHt7ZW5kQW5nbGV9fWRlZylgXG4gICAgICAgICAgICB9KVxuICAgICAgICBdKVxuICAgIClcbl07XG5cbmNvbnN0IGJhc2VQYXJhbXM6IElBbmltYXRpb25QYXJhbXMgPSB7XG4gICAgZGVsYXk6ICcwcycsXG4gICAgZHVyYXRpb246ICc2MDBtcycsXG4gICAgZWFzaW5nOiBFYXNlT3V0LnF1YWQsXG4gICAgZW5kQW5nbGU6IDE4MCxcbiAgICBlbmREaXN0YW5jZTogJzBweCcsXG4gICAgcm90YXRlWDogMSxcbiAgICByb3RhdGVZOiAwLFxuICAgIHJvdGF0ZVo6IDAsXG4gICAgc3RhcnRBbmdsZTogMCxcbiAgICBzdGFydERpc3RhbmNlOiAnMHB4J1xufTtcblxuY29uc3QgZmxpcFRvcDogQW5pbWF0aW9uUmVmZXJlbmNlTWV0YWRhdGEgPSBhbmltYXRpb24oYmFzZVJlY2lwZSwge1xuICAgIHBhcmFtczoge1xuICAgICAgICAuLi5iYXNlUGFyYW1zXG4gICAgfVxufSk7XG5cbmNvbnN0IGZsaXBCb3R0b206IEFuaW1hdGlvblJlZmVyZW5jZU1ldGFkYXRhID0gYW5pbWF0aW9uKGJhc2VSZWNpcGUsIHtcbiAgICBwYXJhbXM6IHtcbiAgICAgICAgLi4uYmFzZVBhcmFtcyxcbiAgICAgICAgZW5kQW5nbGU6IC0xODBcbiAgICB9XG59KTtcblxuY29uc3QgZmxpcExlZnQ6IEFuaW1hdGlvblJlZmVyZW5jZU1ldGFkYXRhID0gYW5pbWF0aW9uKGJhc2VSZWNpcGUsIHtcbiAgICBwYXJhbXM6IHtcbiAgICAgICAgLi4uYmFzZVBhcmFtcyxcbiAgICAgICAgcm90YXRlWDogMCxcbiAgICAgICAgcm90YXRlWTogMVxuICAgIH1cbn0pO1xuXG5jb25zdCBmbGlwUmlnaHQ6IEFuaW1hdGlvblJlZmVyZW5jZU1ldGFkYXRhID0gYW5pbWF0aW9uKGJhc2VSZWNpcGUsIHtcbiAgICBwYXJhbXM6IHtcbiAgICAgICAgLi4uYmFzZVBhcmFtcyxcbiAgICAgICAgZW5kQW5nbGU6IC0xODAsXG4gICAgICAgIHJvdGF0ZVg6IDAsXG4gICAgICAgIHJvdGF0ZVk6IDFcbiAgICB9XG59KTtcblxuY29uc3QgZmxpcEhvckZ3ZDogQW5pbWF0aW9uUmVmZXJlbmNlTWV0YWRhdGEgPSBhbmltYXRpb24oYmFzZVJlY2lwZSwge1xuICAgIHBhcmFtczoge1xuICAgICAgICAuLi5iYXNlUGFyYW1zLFxuICAgICAgICBlbmREaXN0YW5jZTogJzE3MHB4J1xuICAgIH1cbn0pO1xuXG5jb25zdCBmbGlwSG9yQmNrOiBBbmltYXRpb25SZWZlcmVuY2VNZXRhZGF0YSA9IGFuaW1hdGlvbihiYXNlUmVjaXBlLCB7XG4gICAgcGFyYW1zOiB7XG4gICAgICAgIC4uLmJhc2VQYXJhbXMsXG4gICAgICAgIGVuZERpc3RhbmNlOiAnLTE3MHB4J1xuICAgIH1cbn0pO1xuXG5jb25zdCBmbGlwVmVyRndkOiBBbmltYXRpb25SZWZlcmVuY2VNZXRhZGF0YSA9IGFuaW1hdGlvbihiYXNlUmVjaXBlLCB7XG4gICAgcGFyYW1zOiB7XG4gICAgICAgIC4uLmJhc2VQYXJhbXMsXG4gICAgICAgIGVuZERpc3RhbmNlOiAnMTcwcHgnLFxuICAgICAgICByb3RhdGVYOiAwLFxuICAgICAgICByb3RhdGVZOiAxXG4gICAgfVxufSk7XG5cbmNvbnN0IGZsaXBWZXJCY2s6IEFuaW1hdGlvblJlZmVyZW5jZU1ldGFkYXRhID0gYW5pbWF0aW9uKGJhc2VSZWNpcGUsIHtcbiAgICBwYXJhbXM6IHtcbiAgICAgICAgLi4uYmFzZVBhcmFtcyxcbiAgICAgICAgZW5kRGlzdGFuY2U6ICctMTcwcHgnLFxuICAgICAgICByb3RhdGVYOiAwLFxuICAgICAgICByb3RhdGVZOiAxXG4gICAgfVxufSk7XG5cbmV4cG9ydCB7XG4gICAgZmxpcFRvcCxcbiAgICBmbGlwUmlnaHQsXG4gICAgZmxpcEJvdHRvbSxcbiAgICBmbGlwTGVmdCxcbiAgICBmbGlwSG9yRndkLFxuICAgIGZsaXBIb3JCY2ssXG4gICAgZmxpcFZlckZ3ZCxcbiAgICBmbGlwVmVyQmNrXG59O1xuIl19