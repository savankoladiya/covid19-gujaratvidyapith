/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @param {?} h1
 * @param {?} h2
 * @return {?}
 */
export function isHierarchyMatch(h1, h2) {
    if (h1.length !== h2.length) {
        return false;
    }
    return h1.every((level, index) => {
        return level.fieldName === h2[index].fieldName && level.value === h2[index].value;
    });
}
/**
 * @param {?} gRow
 * @return {?}
 */
export function getHierarchy(gRow) {
    /** @type {?} */
    const hierarchy = [];
    if (gRow !== undefined && gRow.expression) {
        hierarchy.push({ fieldName: gRow.expression.fieldName, value: gRow.value });
        while (gRow.groupParent) {
            gRow = gRow.groupParent;
            hierarchy.unshift({ fieldName: gRow.expression.fieldName, value: gRow.value });
        }
    }
    return hierarchy;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiJuZzovL2lnbml0ZXVpLWFuZ3VsYXIvIiwic291cmNlcyI6WyJsaWIvZGF0YS1vcGVyYXRpb25zL29wZXJhdGlvbnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBR0EsTUFBTSxVQUFVLGdCQUFnQixDQUFDLEVBQXNCLEVBQUUsRUFBc0I7SUFDM0UsSUFBSSxFQUFFLENBQUMsTUFBTSxLQUFLLEVBQUUsQ0FBQyxNQUFNLEVBQUU7UUFDekIsT0FBTyxLQUFLLENBQUM7S0FDaEI7SUFDRCxPQUFPLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxLQUFLLEVBQUUsS0FBSyxFQUFXLEVBQUU7UUFDdEMsT0FBTyxLQUFLLENBQUMsU0FBUyxLQUFLLEVBQUUsQ0FBQyxLQUFLLENBQUMsQ0FBQyxTQUFTLElBQUksS0FBSyxDQUFDLEtBQUssS0FBSyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDO0lBQ3RGLENBQUMsQ0FBQyxDQUFDO0FBQ1AsQ0FBQzs7Ozs7QUFFRCxNQUFNLFVBQVUsWUFBWSxDQUFDLElBQW9COztVQUN2QyxTQUFTLEdBQXVCLEVBQUU7SUFDeEMsSUFBSSxJQUFJLEtBQUssU0FBUyxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7UUFDdkMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLFNBQVMsRUFBRSxLQUFLLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxDQUFDLENBQUM7UUFDNUUsT0FBTyxJQUFJLENBQUMsV0FBVyxFQUFFO1lBQ3JCLElBQUksR0FBRyxJQUFJLENBQUMsV0FBVyxDQUFDO1lBQ3hCLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRSxTQUFTLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxTQUFTLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQyxDQUFDO1NBQ2xGO0tBQ0o7SUFDRCxPQUFPLFNBQVMsQ0FBQztBQUNyQixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSUdyb3VwQnlLZXkgfSBmcm9tICcuL2dyb3VwYnktZXhwYW5kLXN0YXRlLmludGVyZmFjZSc7XG5pbXBvcnQgeyBJR3JvdXBCeVJlY29yZCB9IGZyb20gJy4vZ3JvdXBieS1yZWNvcmQuaW50ZXJmYWNlJztcblxuZXhwb3J0IGZ1bmN0aW9uIGlzSGllcmFyY2h5TWF0Y2goaDE6IEFycmF5PElHcm91cEJ5S2V5PiwgaDI6IEFycmF5PElHcm91cEJ5S2V5Pik6IGJvb2xlYW4ge1xuICAgIGlmIChoMS5sZW5ndGggIT09IGgyLmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIHJldHVybiBoMS5ldmVyeSgobGV2ZWwsIGluZGV4KTogYm9vbGVhbiA9PiB7XG4gICAgICAgIHJldHVybiBsZXZlbC5maWVsZE5hbWUgPT09IGgyW2luZGV4XS5maWVsZE5hbWUgJiYgbGV2ZWwudmFsdWUgPT09IGgyW2luZGV4XS52YWx1ZTtcbiAgICB9KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGdldEhpZXJhcmNoeShnUm93OiBJR3JvdXBCeVJlY29yZCk6IEFycmF5PElHcm91cEJ5S2V5PiB7XG4gICAgY29uc3QgaGllcmFyY2h5OiBBcnJheTxJR3JvdXBCeUtleT4gPSBbXTtcbiAgICBpZiAoZ1JvdyAhPT0gdW5kZWZpbmVkICYmIGdSb3cuZXhwcmVzc2lvbikge1xuICAgICAgICBoaWVyYXJjaHkucHVzaCh7IGZpZWxkTmFtZTogZ1Jvdy5leHByZXNzaW9uLmZpZWxkTmFtZSwgdmFsdWU6IGdSb3cudmFsdWUgfSk7XG4gICAgICAgIHdoaWxlIChnUm93Lmdyb3VwUGFyZW50KSB7XG4gICAgICAgICAgICBnUm93ID0gZ1Jvdy5ncm91cFBhcmVudDtcbiAgICAgICAgICAgIGhpZXJhcmNoeS51bnNoaWZ0KHsgZmllbGROYW1lOiBnUm93LmV4cHJlc3Npb24uZmllbGROYW1lLCB2YWx1ZTogZ1Jvdy52YWx1ZSB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gaGllcmFyY2h5O1xufVxuIl19